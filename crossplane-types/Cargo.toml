[package]
name = "crossplane-types"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
publish = { workspace = true }
repository = { workspace = true }

[lints]
workspace = true

[features]
default = []
aws-accessanalyzer = ["dep:crossplane-types-upbound-aws-accessanalyzer"]
aws-account = ["dep:crossplane-types-upbound-aws-account"]
aws-acm = ["dep:crossplane-types-upbound-aws-acm"]
aws-acmpca = ["dep:crossplane-types-upbound-aws-acmpca"]
aws-amp = ["dep:crossplane-types-upbound-aws-amp"]
aws-amplify = ["dep:crossplane-types-upbound-aws-amplify"]
aws-apigateway = ["dep:crossplane-types-upbound-aws-apigateway"]
aws-apigatewayv2 = ["dep:crossplane-types-upbound-aws-apigatewayv2"]
aws-appautoscaling = ["dep:crossplane-types-upbound-aws-appautoscaling"]
aws-appconfig = ["dep:crossplane-types-upbound-aws-appconfig"]
aws-appflow = ["dep:crossplane-types-upbound-aws-appflow"]
aws-appintegrations = ["dep:crossplane-types-upbound-aws-appintegrations"]
aws-applicationinsights = ["dep:crossplane-types-upbound-aws-applicationinsights"]
aws-appmesh = ["dep:crossplane-types-upbound-aws-appmesh"]
aws-apprunner = ["dep:crossplane-types-upbound-aws-apprunner"]
aws-appstream = ["dep:crossplane-types-upbound-aws-appstream"]
aws-appsync = ["dep:crossplane-types-upbound-aws-appsync"]
aws-athena = ["dep:crossplane-types-upbound-aws-athena"]
aws-autoscaling = ["dep:crossplane-types-upbound-aws-autoscaling"]
aws-autoscalingplans = ["dep:crossplane-types-upbound-aws-autoscalingplans"]
aws-aws = ["dep:crossplane-types-upbound-aws-aws"]
aws-backup = ["dep:crossplane-types-upbound-aws-backup"]
aws-batch = ["dep:crossplane-types-upbound-aws-batch"]
aws-bedrock = ["dep:crossplane-types-upbound-aws-bedrock"]
aws-bedrockagent = ["dep:crossplane-types-upbound-aws-bedrockagent"]
aws-budgets = ["dep:crossplane-types-upbound-aws-budgets"]
aws-ce = ["dep:crossplane-types-upbound-aws-ce"]
aws-chime = ["dep:crossplane-types-upbound-aws-chime"]
aws-cloud9 = ["dep:crossplane-types-upbound-aws-cloud9"]
aws-cloudcontrol = ["dep:crossplane-types-upbound-aws-cloudcontrol"]
aws-cloudformation = ["dep:crossplane-types-upbound-aws-cloudformation"]
aws-cloudfront = ["dep:crossplane-types-upbound-aws-cloudfront"]
aws-cloudsearch = ["dep:crossplane-types-upbound-aws-cloudsearch"]
aws-cloudtrail = ["dep:crossplane-types-upbound-aws-cloudtrail"]
aws-cloudwatch = ["dep:crossplane-types-upbound-aws-cloudwatch"]
aws-cloudwatchevents = ["dep:crossplane-types-upbound-aws-cloudwatchevents"]
aws-cloudwatchlogs = ["dep:crossplane-types-upbound-aws-cloudwatchlogs"]
aws-codeartifact = ["dep:crossplane-types-upbound-aws-codeartifact"]
aws-codecommit = ["dep:crossplane-types-upbound-aws-codecommit"]
aws-codeguruprofiler = ["dep:crossplane-types-upbound-aws-codeguruprofiler"]
aws-codepipeline = ["dep:crossplane-types-upbound-aws-codepipeline"]
aws-codestarconnections = ["dep:crossplane-types-upbound-aws-codestarconnections"]
aws-codestarnotifications = ["dep:crossplane-types-upbound-aws-codestarnotifications"]
aws-cognitoidentity = ["dep:crossplane-types-upbound-aws-cognitoidentity"]
aws-cognitoidp = ["dep:crossplane-types-upbound-aws-cognitoidp"]
aws-configservice = ["dep:crossplane-types-upbound-aws-configservice"]
aws-connect = ["dep:crossplane-types-upbound-aws-connect"]
aws-cur = ["dep:crossplane-types-upbound-aws-cur"]
aws-dataexchange = ["dep:crossplane-types-upbound-aws-dataexchange"]
aws-datapipeline = ["dep:crossplane-types-upbound-aws-datapipeline"]
aws-datasync = ["dep:crossplane-types-upbound-aws-datasync"]
aws-dax = ["dep:crossplane-types-upbound-aws-dax"]
aws-deploy = ["dep:crossplane-types-upbound-aws-deploy"]
aws-detective = ["dep:crossplane-types-upbound-aws-detective"]
aws-devicefarm = ["dep:crossplane-types-upbound-aws-devicefarm"]
aws-directconnect = ["dep:crossplane-types-upbound-aws-directconnect"]
aws-dlm = ["dep:crossplane-types-upbound-aws-dlm"]
aws-dms = ["dep:crossplane-types-upbound-aws-dms"]
aws-docdb = ["dep:crossplane-types-upbound-aws-docdb"]
aws-ds = ["dep:crossplane-types-upbound-aws-ds"]
aws-dynamodb = ["dep:crossplane-types-upbound-aws-dynamodb"]
aws-ec2 = ["dep:crossplane-types-upbound-aws-ec2"]
aws-ecr = ["dep:crossplane-types-upbound-aws-ecr"]
aws-ecrpublic = ["dep:crossplane-types-upbound-aws-ecrpublic"]
aws-ecs = ["dep:crossplane-types-upbound-aws-ecs"]
aws-efs = ["dep:crossplane-types-upbound-aws-efs"]
aws-eks = ["dep:crossplane-types-upbound-aws-eks"]
aws-elasticache = ["dep:crossplane-types-upbound-aws-elasticache"]
aws-elasticbeanstalk = ["dep:crossplane-types-upbound-aws-elasticbeanstalk"]
aws-elasticsearch = ["dep:crossplane-types-upbound-aws-elasticsearch"]
aws-elastictranscoder = ["dep:crossplane-types-upbound-aws-elastictranscoder"]
aws-elb = ["dep:crossplane-types-upbound-aws-elb"]
aws-elbv2 = ["dep:crossplane-types-upbound-aws-elbv2"]
aws-emr = ["dep:crossplane-types-upbound-aws-emr"]
aws-emrserverless = ["dep:crossplane-types-upbound-aws-emrserverless"]
aws-evidently = ["dep:crossplane-types-upbound-aws-evidently"]
aws-firehose = ["dep:crossplane-types-upbound-aws-firehose"]
aws-fis = ["dep:crossplane-types-upbound-aws-fis"]
aws-fsx = ["dep:crossplane-types-upbound-aws-fsx"]
aws-gamelift = ["dep:crossplane-types-upbound-aws-gamelift"]
aws-glacier = ["dep:crossplane-types-upbound-aws-glacier"]
aws-globalaccelerator = ["dep:crossplane-types-upbound-aws-globalaccelerator"]
aws-glue = ["dep:crossplane-types-upbound-aws-glue"]
aws-grafana = ["dep:crossplane-types-upbound-aws-grafana"]
aws-guardduty = ["dep:crossplane-types-upbound-aws-guardduty"]
aws-iam = ["dep:crossplane-types-upbound-aws-iam"]
aws-identitystore = ["dep:crossplane-types-upbound-aws-identitystore"]
aws-imagebuilder = ["dep:crossplane-types-upbound-aws-imagebuilder"]
aws-inspector = ["dep:crossplane-types-upbound-aws-inspector"]
aws-inspector2 = ["dep:crossplane-types-upbound-aws-inspector2"]
aws-iot = ["dep:crossplane-types-upbound-aws-iot"]
aws-ivs = ["dep:crossplane-types-upbound-aws-ivs"]
aws-kafka = ["dep:crossplane-types-upbound-aws-kafka"]
aws-kafkaconnect = ["dep:crossplane-types-upbound-aws-kafkaconnect"]
aws-kendra = ["dep:crossplane-types-upbound-aws-kendra"]
aws-keyspaces = ["dep:crossplane-types-upbound-aws-keyspaces"]
aws-kinesis = ["dep:crossplane-types-upbound-aws-kinesis"]
aws-kinesisanalytics = ["dep:crossplane-types-upbound-aws-kinesisanalytics"]
aws-kinesisanalyticsv2 = ["dep:crossplane-types-upbound-aws-kinesisanalyticsv2"]
aws-kinesisvideo = ["dep:crossplane-types-upbound-aws-kinesisvideo"]
aws-kms = ["dep:crossplane-types-upbound-aws-kms"]
aws-lakeformation = ["dep:crossplane-types-upbound-aws-lakeformation"]
aws-lambda = ["dep:crossplane-types-upbound-aws-lambda"]
aws-lexmodels = ["dep:crossplane-types-upbound-aws-lexmodels"]
aws-licensemanager = ["dep:crossplane-types-upbound-aws-licensemanager"]
aws-lightsail = ["dep:crossplane-types-upbound-aws-lightsail"]
aws-location = ["dep:crossplane-types-upbound-aws-location"]
aws-macie2 = ["dep:crossplane-types-upbound-aws-macie2"]
aws-mediaconvert = ["dep:crossplane-types-upbound-aws-mediaconvert"]
aws-medialive = ["dep:crossplane-types-upbound-aws-medialive"]
aws-mediapackage = ["dep:crossplane-types-upbound-aws-mediapackage"]
aws-mediastore = ["dep:crossplane-types-upbound-aws-mediastore"]
aws-memorydb = ["dep:crossplane-types-upbound-aws-memorydb"]
aws-mq = ["dep:crossplane-types-upbound-aws-mq"]
aws-mwaa = ["dep:crossplane-types-upbound-aws-mwaa"]
aws-neptune = ["dep:crossplane-types-upbound-aws-neptune"]
aws-networkfirewall = ["dep:crossplane-types-upbound-aws-networkfirewall"]
aws-networkmanager = ["dep:crossplane-types-upbound-aws-networkmanager"]
aws-opensearch = ["dep:crossplane-types-upbound-aws-opensearch"]
aws-opensearchserverless = ["dep:crossplane-types-upbound-aws-opensearchserverless"]
aws-opsworks = ["dep:crossplane-types-upbound-aws-opsworks"]
aws-organizations = ["dep:crossplane-types-upbound-aws-organizations"]
aws-osis = ["dep:crossplane-types-upbound-aws-osis"]
aws-pinpoint = ["dep:crossplane-types-upbound-aws-pinpoint"]
aws-pipes = ["dep:crossplane-types-upbound-aws-pipes"]
aws-qldb = ["dep:crossplane-types-upbound-aws-qldb"]
aws-quicksight = ["dep:crossplane-types-upbound-aws-quicksight"]
aws-ram = ["dep:crossplane-types-upbound-aws-ram"]
aws-rds = ["dep:crossplane-types-upbound-aws-rds"]
aws-redshift = ["dep:crossplane-types-upbound-aws-redshift"]
aws-redshiftserverless = ["dep:crossplane-types-upbound-aws-redshiftserverless"]
aws-resourcegroups = ["dep:crossplane-types-upbound-aws-resourcegroups"]
aws-rolesanywhere = ["dep:crossplane-types-upbound-aws-rolesanywhere"]
aws-route53 = ["dep:crossplane-types-upbound-aws-route53"]
aws-route53recoverycontrolconfig = ["dep:crossplane-types-upbound-aws-route53recoverycontrolconfig"]
aws-route53recoveryreadiness = ["dep:crossplane-types-upbound-aws-route53recoveryreadiness"]
aws-route53resolver = ["dep:crossplane-types-upbound-aws-route53resolver"]
aws-rum = ["dep:crossplane-types-upbound-aws-rum"]
aws-s3 = ["dep:crossplane-types-upbound-aws-s3"]
aws-s3control = ["dep:crossplane-types-upbound-aws-s3control"]
aws-sagemaker = ["dep:crossplane-types-upbound-aws-sagemaker"]
aws-scheduler = ["dep:crossplane-types-upbound-aws-scheduler"]
aws-schemas = ["dep:crossplane-types-upbound-aws-schemas"]
aws-secretsmanager = ["dep:crossplane-types-upbound-aws-secretsmanager"]
aws-securityhub = ["dep:crossplane-types-upbound-aws-securityhub"]
aws-serverlessrepo = ["dep:crossplane-types-upbound-aws-serverlessrepo"]
aws-servicecatalog = ["dep:crossplane-types-upbound-aws-servicecatalog"]
aws-servicediscovery = ["dep:crossplane-types-upbound-aws-servicediscovery"]
aws-servicequotas = ["dep:crossplane-types-upbound-aws-servicequotas"]
aws-ses = ["dep:crossplane-types-upbound-aws-ses"]
aws-sesv2 = ["dep:crossplane-types-upbound-aws-sesv2"]
aws-sfn = ["dep:crossplane-types-upbound-aws-sfn"]
aws-signer = ["dep:crossplane-types-upbound-aws-signer"]
aws-simpledb = ["dep:crossplane-types-upbound-aws-simpledb"]
aws-sns = ["dep:crossplane-types-upbound-aws-sns"]
aws-sqs = ["dep:crossplane-types-upbound-aws-sqs"]
aws-ssm = ["dep:crossplane-types-upbound-aws-ssm"]
aws-ssoadmin = ["dep:crossplane-types-upbound-aws-ssoadmin"]
aws-swf = ["dep:crossplane-types-upbound-aws-swf"]
aws-timestreamwrite = ["dep:crossplane-types-upbound-aws-timestreamwrite"]
aws-transcribe = ["dep:crossplane-types-upbound-aws-transcribe"]
aws-transfer = ["dep:crossplane-types-upbound-aws-transfer"]
aws-vpc = ["dep:crossplane-types-upbound-aws-vpc"]
aws-waf = ["dep:crossplane-types-upbound-aws-waf"]
aws-wafregional = ["dep:crossplane-types-upbound-aws-wafregional"]
aws-wafv2 = ["dep:crossplane-types-upbound-aws-wafv2"]
aws-workspaces = ["dep:crossplane-types-upbound-aws-workspaces"]
aws-xray = ["dep:crossplane-types-upbound-aws-xray"]
gcp-accesscontextmanager = ["dep:crossplane-types-upbound-gcp-accesscontextmanager"]
gcp-activedirectory = ["dep:crossplane-types-upbound-gcp-activedirectory"]
gcp-alloydb = ["dep:crossplane-types-upbound-gcp-alloydb"]
gcp-apigee = ["dep:crossplane-types-upbound-gcp-apigee"]
gcp-appengine = ["dep:crossplane-types-upbound-gcp-appengine"]
gcp-artifact = ["dep:crossplane-types-upbound-gcp-artifact"]
gcp-beyondcorp = ["dep:crossplane-types-upbound-gcp-beyondcorp"]
gcp-bigquery = ["dep:crossplane-types-upbound-gcp-bigquery"]
gcp-bigtable = ["dep:crossplane-types-upbound-gcp-bigtable"]
gcp-binaryauthorization = ["dep:crossplane-types-upbound-gcp-binaryauthorization"]
gcp-certificatemanager = ["dep:crossplane-types-upbound-gcp-certificatemanager"]
gcp-cloud = ["dep:crossplane-types-upbound-gcp-cloud"]
gcp-cloudbuild = ["dep:crossplane-types-upbound-gcp-cloudbuild"]
gcp-cloudfunctions = ["dep:crossplane-types-upbound-gcp-cloudfunctions"]
gcp-cloudfunctions2 = ["dep:crossplane-types-upbound-gcp-cloudfunctions2"]
gcp-cloudplatform = ["dep:crossplane-types-upbound-gcp-cloudplatform"]
gcp-cloudrun = ["dep:crossplane-types-upbound-gcp-cloudrun"]
gcp-cloudscheduler = ["dep:crossplane-types-upbound-gcp-cloudscheduler"]
gcp-cloudtasks = ["dep:crossplane-types-upbound-gcp-cloudtasks"]
gcp-composer = ["dep:crossplane-types-upbound-gcp-composer"]
gcp-compute = ["dep:crossplane-types-upbound-gcp-compute"]
gcp-container = ["dep:crossplane-types-upbound-gcp-container"]
gcp-containeranalysis = ["dep:crossplane-types-upbound-gcp-containeranalysis"]
gcp-containerattached = ["dep:crossplane-types-upbound-gcp-containerattached"]
gcp-containeraws = ["dep:crossplane-types-upbound-gcp-containeraws"]
gcp-containerazure = ["dep:crossplane-types-upbound-gcp-containerazure"]
gcp-datacatalog = ["dep:crossplane-types-upbound-gcp-datacatalog"]
gcp-dataflow = ["dep:crossplane-types-upbound-gcp-dataflow"]
gcp-datafusion = ["dep:crossplane-types-upbound-gcp-datafusion"]
gcp-datalossprevention = ["dep:crossplane-types-upbound-gcp-datalossprevention"]
gcp-dataplex = ["dep:crossplane-types-upbound-gcp-dataplex"]
gcp-dataproc = ["dep:crossplane-types-upbound-gcp-dataproc"]
gcp-datastore = ["dep:crossplane-types-upbound-gcp-datastore"]
gcp-datastream = ["dep:crossplane-types-upbound-gcp-datastream"]
gcp-dialogflowcx = ["dep:crossplane-types-upbound-gcp-dialogflowcx"]
gcp-dns = ["dep:crossplane-types-upbound-gcp-dns"]
gcp-documentai = ["dep:crossplane-types-upbound-gcp-documentai"]
gcp-essentialcontacts = ["dep:crossplane-types-upbound-gcp-essentialcontacts"]
gcp-eventarc = ["dep:crossplane-types-upbound-gcp-eventarc"]
gcp-filestore = ["dep:crossplane-types-upbound-gcp-filestore"]
gcp-firebaserules = ["dep:crossplane-types-upbound-gcp-firebaserules"]
gcp-gcp = ["dep:crossplane-types-upbound-gcp-gcp"]
gcp-gke = ["dep:crossplane-types-upbound-gcp-gke"]
gcp-gkehub = ["dep:crossplane-types-upbound-gcp-gkehub"]
gcp-healthcare = ["dep:crossplane-types-upbound-gcp-healthcare"]
gcp-iam = ["dep:crossplane-types-upbound-gcp-iam"]
gcp-iap = ["dep:crossplane-types-upbound-gcp-iap"]
gcp-identityplatform = ["dep:crossplane-types-upbound-gcp-identityplatform"]
gcp-kms = ["dep:crossplane-types-upbound-gcp-kms"]
gcp-logging = ["dep:crossplane-types-upbound-gcp-logging"]
gcp-memcache = ["dep:crossplane-types-upbound-gcp-memcache"]
gcp-mlengine = ["dep:crossplane-types-upbound-gcp-mlengine"]
gcp-monitoring = ["dep:crossplane-types-upbound-gcp-monitoring"]
gcp-networkconnectivity = ["dep:crossplane-types-upbound-gcp-networkconnectivity"]
gcp-networkmanagement = ["dep:crossplane-types-upbound-gcp-networkmanagement"]
gcp-networksecurity = ["dep:crossplane-types-upbound-gcp-networksecurity"]
gcp-networkservices = ["dep:crossplane-types-upbound-gcp-networkservices"]
gcp-notebooks = ["dep:crossplane-types-upbound-gcp-notebooks"]
gcp-orgpolicy = ["dep:crossplane-types-upbound-gcp-orgpolicy"]
gcp-osconfig = ["dep:crossplane-types-upbound-gcp-osconfig"]
gcp-oslogin = ["dep:crossplane-types-upbound-gcp-oslogin"]
gcp-privateca = ["dep:crossplane-types-upbound-gcp-privateca"]
gcp-pubsub = ["dep:crossplane-types-upbound-gcp-pubsub"]
gcp-redis = ["dep:crossplane-types-upbound-gcp-redis"]
gcp-secretmanager = ["dep:crossplane-types-upbound-gcp-secretmanager"]
gcp-servicenetworking = ["dep:crossplane-types-upbound-gcp-servicenetworking"]
gcp-sourcerepo = ["dep:crossplane-types-upbound-gcp-sourcerepo"]
gcp-spanner = ["dep:crossplane-types-upbound-gcp-spanner"]
gcp-sql = ["dep:crossplane-types-upbound-gcp-sql"]
gcp-storage = ["dep:crossplane-types-upbound-gcp-storage"]
gcp-storagetransfer = ["dep:crossplane-types-upbound-gcp-storagetransfer"]
gcp-tags = ["dep:crossplane-types-upbound-gcp-tags"]
gcp-tpu = ["dep:crossplane-types-upbound-gcp-tpu"]
gcp-vertexai = ["dep:crossplane-types-upbound-gcp-vertexai"]
gcp-vpcaccess = ["dep:crossplane-types-upbound-gcp-vpcaccess"]
gcp-workflows = ["dep:crossplane-types-upbound-gcp-workflows"]

[dependencies]
crossplane-types-upbound-aws-accessanalyzer = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-accessanalyzer", optional = true }
crossplane-types-upbound-aws-account = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-account", optional = true }
crossplane-types-upbound-aws-acm = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-acm", optional = true }
crossplane-types-upbound-aws-acmpca = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-acmpca", optional = true }
crossplane-types-upbound-aws-amp = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-amp", optional = true }
crossplane-types-upbound-aws-amplify = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-amplify", optional = true }
crossplane-types-upbound-aws-apigateway = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-apigateway", optional = true }
crossplane-types-upbound-aws-apigatewayv2 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-apigatewayv2", optional = true }
crossplane-types-upbound-aws-appautoscaling = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-appautoscaling", optional = true }
crossplane-types-upbound-aws-appconfig = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-appconfig", optional = true }
crossplane-types-upbound-aws-appflow = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-appflow", optional = true }
crossplane-types-upbound-aws-appintegrations = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-appintegrations", optional = true }
crossplane-types-upbound-aws-applicationinsights = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-applicationinsights", optional = true }
crossplane-types-upbound-aws-appmesh = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-appmesh", optional = true }
crossplane-types-upbound-aws-apprunner = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-apprunner", optional = true }
crossplane-types-upbound-aws-appstream = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-appstream", optional = true }
crossplane-types-upbound-aws-appsync = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-appsync", optional = true }
crossplane-types-upbound-aws-athena = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-athena", optional = true }
crossplane-types-upbound-aws-autoscaling = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-autoscaling", optional = true }
crossplane-types-upbound-aws-autoscalingplans = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-autoscalingplans", optional = true }
crossplane-types-upbound-aws-aws = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-aws", optional = true }
crossplane-types-upbound-aws-backup = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-backup", optional = true }
crossplane-types-upbound-aws-batch = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-batch", optional = true }
crossplane-types-upbound-aws-bedrock = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-bedrock", optional = true }
crossplane-types-upbound-aws-bedrockagent = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-bedrockagent", optional = true }
crossplane-types-upbound-aws-budgets = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-budgets", optional = true }
crossplane-types-upbound-aws-ce = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ce", optional = true }
crossplane-types-upbound-aws-chime = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-chime", optional = true }
crossplane-types-upbound-aws-cloud9 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cloud9", optional = true }
crossplane-types-upbound-aws-cloudcontrol = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cloudcontrol", optional = true }
crossplane-types-upbound-aws-cloudformation = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cloudformation", optional = true }
crossplane-types-upbound-aws-cloudfront = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cloudfront", optional = true }
crossplane-types-upbound-aws-cloudsearch = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cloudsearch", optional = true }
crossplane-types-upbound-aws-cloudtrail = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cloudtrail", optional = true }
crossplane-types-upbound-aws-cloudwatch = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cloudwatch", optional = true }
crossplane-types-upbound-aws-cloudwatchevents = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cloudwatchevents", optional = true }
crossplane-types-upbound-aws-cloudwatchlogs = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cloudwatchlogs", optional = true }
crossplane-types-upbound-aws-codeartifact = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-codeartifact", optional = true }
crossplane-types-upbound-aws-codecommit = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-codecommit", optional = true }
crossplane-types-upbound-aws-codeguruprofiler = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-codeguruprofiler", optional = true }
crossplane-types-upbound-aws-codepipeline = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-codepipeline", optional = true }
crossplane-types-upbound-aws-codestarconnections = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-codestarconnections", optional = true }
crossplane-types-upbound-aws-codestarnotifications = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-codestarnotifications", optional = true }
crossplane-types-upbound-aws-cognitoidentity = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cognitoidentity", optional = true }
crossplane-types-upbound-aws-cognitoidp = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cognitoidp", optional = true }
crossplane-types-upbound-aws-configservice = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-configservice", optional = true }
crossplane-types-upbound-aws-connect = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-connect", optional = true }
crossplane-types-upbound-aws-cur = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-cur", optional = true }
crossplane-types-upbound-aws-dataexchange = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-dataexchange", optional = true }
crossplane-types-upbound-aws-datapipeline = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-datapipeline", optional = true }
crossplane-types-upbound-aws-datasync = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-datasync", optional = true }
crossplane-types-upbound-aws-dax = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-dax", optional = true }
crossplane-types-upbound-aws-deploy = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-deploy", optional = true }
crossplane-types-upbound-aws-detective = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-detective", optional = true }
crossplane-types-upbound-aws-devicefarm = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-devicefarm", optional = true }
crossplane-types-upbound-aws-directconnect = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-directconnect", optional = true }
crossplane-types-upbound-aws-dlm = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-dlm", optional = true }
crossplane-types-upbound-aws-dms = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-dms", optional = true }
crossplane-types-upbound-aws-docdb = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-docdb", optional = true }
crossplane-types-upbound-aws-ds = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ds", optional = true }
crossplane-types-upbound-aws-dynamodb = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-dynamodb", optional = true }
crossplane-types-upbound-aws-ec2 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ec2", optional = true }
crossplane-types-upbound-aws-ecr = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ecr", optional = true }
crossplane-types-upbound-aws-ecrpublic = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ecrpublic", optional = true }
crossplane-types-upbound-aws-ecs = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ecs", optional = true }
crossplane-types-upbound-aws-efs = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-efs", optional = true }
crossplane-types-upbound-aws-eks = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-eks", optional = true }
crossplane-types-upbound-aws-elasticache = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-elasticache", optional = true }
crossplane-types-upbound-aws-elasticbeanstalk = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-elasticbeanstalk", optional = true }
crossplane-types-upbound-aws-elasticsearch = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-elasticsearch", optional = true }
crossplane-types-upbound-aws-elastictranscoder = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-elastictranscoder", optional = true }
crossplane-types-upbound-aws-elb = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-elb", optional = true }
crossplane-types-upbound-aws-elbv2 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-elbv2", optional = true }
crossplane-types-upbound-aws-emr = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-emr", optional = true }
crossplane-types-upbound-aws-emrserverless = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-emrserverless", optional = true }
crossplane-types-upbound-aws-evidently = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-evidently", optional = true }
crossplane-types-upbound-aws-firehose = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-firehose", optional = true }
crossplane-types-upbound-aws-fis = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-fis", optional = true }
crossplane-types-upbound-aws-fsx = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-fsx", optional = true }
crossplane-types-upbound-aws-gamelift = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-gamelift", optional = true }
crossplane-types-upbound-aws-glacier = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-glacier", optional = true }
crossplane-types-upbound-aws-globalaccelerator = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-globalaccelerator", optional = true }
crossplane-types-upbound-aws-glue = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-glue", optional = true }
crossplane-types-upbound-aws-grafana = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-grafana", optional = true }
crossplane-types-upbound-aws-guardduty = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-guardduty", optional = true }
crossplane-types-upbound-aws-iam = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-iam", optional = true }
crossplane-types-upbound-aws-identitystore = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-identitystore", optional = true }
crossplane-types-upbound-aws-imagebuilder = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-imagebuilder", optional = true }
crossplane-types-upbound-aws-inspector = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-inspector", optional = true }
crossplane-types-upbound-aws-inspector2 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-inspector2", optional = true }
crossplane-types-upbound-aws-iot = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-iot", optional = true }
crossplane-types-upbound-aws-ivs = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ivs", optional = true }
crossplane-types-upbound-aws-kafka = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-kafka", optional = true }
crossplane-types-upbound-aws-kafkaconnect = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-kafkaconnect", optional = true }
crossplane-types-upbound-aws-kendra = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-kendra", optional = true }
crossplane-types-upbound-aws-keyspaces = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-keyspaces", optional = true }
crossplane-types-upbound-aws-kinesis = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-kinesis", optional = true }
crossplane-types-upbound-aws-kinesisanalytics = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-kinesisanalytics", optional = true }
crossplane-types-upbound-aws-kinesisanalyticsv2 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-kinesisanalyticsv2", optional = true }
crossplane-types-upbound-aws-kinesisvideo = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-kinesisvideo", optional = true }
crossplane-types-upbound-aws-kms = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-kms", optional = true }
crossplane-types-upbound-aws-lakeformation = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-lakeformation", optional = true }
crossplane-types-upbound-aws-lambda = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-lambda", optional = true }
crossplane-types-upbound-aws-lexmodels = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-lexmodels", optional = true }
crossplane-types-upbound-aws-licensemanager = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-licensemanager", optional = true }
crossplane-types-upbound-aws-lightsail = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-lightsail", optional = true }
crossplane-types-upbound-aws-location = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-location", optional = true }
crossplane-types-upbound-aws-macie2 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-macie2", optional = true }
crossplane-types-upbound-aws-mediaconvert = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-mediaconvert", optional = true }
crossplane-types-upbound-aws-medialive = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-medialive", optional = true }
crossplane-types-upbound-aws-mediapackage = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-mediapackage", optional = true }
crossplane-types-upbound-aws-mediastore = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-mediastore", optional = true }
crossplane-types-upbound-aws-memorydb = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-memorydb", optional = true }
crossplane-types-upbound-aws-mq = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-mq", optional = true }
crossplane-types-upbound-aws-mwaa = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-mwaa", optional = true }
crossplane-types-upbound-aws-neptune = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-neptune", optional = true }
crossplane-types-upbound-aws-networkfirewall = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-networkfirewall", optional = true }
crossplane-types-upbound-aws-networkmanager = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-networkmanager", optional = true }
crossplane-types-upbound-aws-opensearch = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-opensearch", optional = true }
crossplane-types-upbound-aws-opensearchserverless = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-opensearchserverless", optional = true }
crossplane-types-upbound-aws-opsworks = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-opsworks", optional = true }
crossplane-types-upbound-aws-organizations = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-organizations", optional = true }
crossplane-types-upbound-aws-osis = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-osis", optional = true }
crossplane-types-upbound-aws-pinpoint = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-pinpoint", optional = true }
crossplane-types-upbound-aws-pipes = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-pipes", optional = true }
crossplane-types-upbound-aws-qldb = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-qldb", optional = true }
crossplane-types-upbound-aws-quicksight = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-quicksight", optional = true }
crossplane-types-upbound-aws-ram = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ram", optional = true }
crossplane-types-upbound-aws-rds = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-rds", optional = true }
crossplane-types-upbound-aws-redshift = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-redshift", optional = true }
crossplane-types-upbound-aws-redshiftserverless = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-redshiftserverless", optional = true }
crossplane-types-upbound-aws-resourcegroups = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-resourcegroups", optional = true }
crossplane-types-upbound-aws-rolesanywhere = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-rolesanywhere", optional = true }
crossplane-types-upbound-aws-route53 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-route53", optional = true }
crossplane-types-upbound-aws-route53recoverycontrolconfig = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-route53recoverycontrolconfig", optional = true }
crossplane-types-upbound-aws-route53recoveryreadiness = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-route53recoveryreadiness", optional = true }
crossplane-types-upbound-aws-route53resolver = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-route53resolver", optional = true }
crossplane-types-upbound-aws-rum = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-rum", optional = true }
crossplane-types-upbound-aws-s3 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-s3", optional = true }
crossplane-types-upbound-aws-s3control = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-s3control", optional = true }
crossplane-types-upbound-aws-sagemaker = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-sagemaker", optional = true }
crossplane-types-upbound-aws-scheduler = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-scheduler", optional = true }
crossplane-types-upbound-aws-schemas = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-schemas", optional = true }
crossplane-types-upbound-aws-secretsmanager = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-secretsmanager", optional = true }
crossplane-types-upbound-aws-securityhub = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-securityhub", optional = true }
crossplane-types-upbound-aws-serverlessrepo = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-serverlessrepo", optional = true }
crossplane-types-upbound-aws-servicecatalog = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-servicecatalog", optional = true }
crossplane-types-upbound-aws-servicediscovery = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-servicediscovery", optional = true }
crossplane-types-upbound-aws-servicequotas = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-servicequotas", optional = true }
crossplane-types-upbound-aws-ses = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ses", optional = true }
crossplane-types-upbound-aws-sesv2 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-sesv2", optional = true }
crossplane-types-upbound-aws-sfn = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-sfn", optional = true }
crossplane-types-upbound-aws-signer = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-signer", optional = true }
crossplane-types-upbound-aws-simpledb = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-simpledb", optional = true }
crossplane-types-upbound-aws-sns = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-sns", optional = true }
crossplane-types-upbound-aws-sqs = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-sqs", optional = true }
crossplane-types-upbound-aws-ssm = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ssm", optional = true }
crossplane-types-upbound-aws-ssoadmin = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-ssoadmin", optional = true }
crossplane-types-upbound-aws-swf = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-swf", optional = true }
crossplane-types-upbound-aws-timestreamwrite = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-timestreamwrite", optional = true }
crossplane-types-upbound-aws-transcribe = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-transcribe", optional = true }
crossplane-types-upbound-aws-transfer = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-transfer", optional = true }
crossplane-types-upbound-aws-vpc = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-vpc", optional = true }
crossplane-types-upbound-aws-waf = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-waf", optional = true }
crossplane-types-upbound-aws-wafregional = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-wafregional", optional = true }
crossplane-types-upbound-aws-wafv2 = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-wafv2", optional = true }
crossplane-types-upbound-aws-workspaces = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-workspaces", optional = true }
crossplane-types-upbound-aws-xray = { version = "0.1.0", path = "crates/crossplane-types-upbound-aws-xray", optional = true }
crossplane-types-upbound-gcp-accesscontextmanager = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-accesscontextmanager", optional = true }
crossplane-types-upbound-gcp-activedirectory = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-activedirectory", optional = true }
crossplane-types-upbound-gcp-alloydb = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-alloydb", optional = true }
crossplane-types-upbound-gcp-apigee = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-apigee", optional = true }
crossplane-types-upbound-gcp-appengine = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-appengine", optional = true }
crossplane-types-upbound-gcp-artifact = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-artifact", optional = true }
crossplane-types-upbound-gcp-beyondcorp = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-beyondcorp", optional = true }
crossplane-types-upbound-gcp-bigquery = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-bigquery", optional = true }
crossplane-types-upbound-gcp-bigtable = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-bigtable", optional = true }
crossplane-types-upbound-gcp-binaryauthorization = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-binaryauthorization", optional = true }
crossplane-types-upbound-gcp-certificatemanager = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-certificatemanager", optional = true }
crossplane-types-upbound-gcp-cloud = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-cloud", optional = true }
crossplane-types-upbound-gcp-cloudbuild = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-cloudbuild", optional = true }
crossplane-types-upbound-gcp-cloudfunctions = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-cloudfunctions", optional = true }
crossplane-types-upbound-gcp-cloudfunctions2 = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-cloudfunctions2", optional = true }
crossplane-types-upbound-gcp-cloudplatform = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-cloudplatform", optional = true }
crossplane-types-upbound-gcp-cloudrun = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-cloudrun", optional = true }
crossplane-types-upbound-gcp-cloudscheduler = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-cloudscheduler", optional = true }
crossplane-types-upbound-gcp-cloudtasks = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-cloudtasks", optional = true }
crossplane-types-upbound-gcp-composer = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-composer", optional = true }
crossplane-types-upbound-gcp-compute = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-compute", optional = true }
crossplane-types-upbound-gcp-container = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-container", optional = true }
crossplane-types-upbound-gcp-containeranalysis = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-containeranalysis", optional = true }
crossplane-types-upbound-gcp-containerattached = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-containerattached", optional = true }
crossplane-types-upbound-gcp-containeraws = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-containeraws", optional = true }
crossplane-types-upbound-gcp-containerazure = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-containerazure", optional = true }
crossplane-types-upbound-gcp-datacatalog = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-datacatalog", optional = true }
crossplane-types-upbound-gcp-dataflow = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-dataflow", optional = true }
crossplane-types-upbound-gcp-datafusion = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-datafusion", optional = true }
crossplane-types-upbound-gcp-datalossprevention = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-datalossprevention", optional = true }
crossplane-types-upbound-gcp-dataplex = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-dataplex", optional = true }
crossplane-types-upbound-gcp-dataproc = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-dataproc", optional = true }
crossplane-types-upbound-gcp-datastore = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-datastore", optional = true }
crossplane-types-upbound-gcp-datastream = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-datastream", optional = true }
crossplane-types-upbound-gcp-dialogflowcx = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-dialogflowcx", optional = true }
crossplane-types-upbound-gcp-dns = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-dns", optional = true }
crossplane-types-upbound-gcp-documentai = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-documentai", optional = true }
crossplane-types-upbound-gcp-essentialcontacts = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-essentialcontacts", optional = true }
crossplane-types-upbound-gcp-eventarc = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-eventarc", optional = true }
crossplane-types-upbound-gcp-filestore = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-filestore", optional = true }
crossplane-types-upbound-gcp-firebaserules = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-firebaserules", optional = true }
crossplane-types-upbound-gcp-gcp = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-gcp", optional = true }
crossplane-types-upbound-gcp-gke = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-gke", optional = true }
crossplane-types-upbound-gcp-gkehub = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-gkehub", optional = true }
crossplane-types-upbound-gcp-healthcare = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-healthcare", optional = true }
crossplane-types-upbound-gcp-iam = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-iam", optional = true }
crossplane-types-upbound-gcp-iap = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-iap", optional = true }
crossplane-types-upbound-gcp-identityplatform = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-identityplatform", optional = true }
crossplane-types-upbound-gcp-kms = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-kms", optional = true }
crossplane-types-upbound-gcp-logging = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-logging", optional = true }
crossplane-types-upbound-gcp-memcache = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-memcache", optional = true }
crossplane-types-upbound-gcp-mlengine = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-mlengine", optional = true }
crossplane-types-upbound-gcp-monitoring = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-monitoring", optional = true }
crossplane-types-upbound-gcp-networkconnectivity = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-networkconnectivity", optional = true }
crossplane-types-upbound-gcp-networkmanagement = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-networkmanagement", optional = true }
crossplane-types-upbound-gcp-networksecurity = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-networksecurity", optional = true }
crossplane-types-upbound-gcp-networkservices = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-networkservices", optional = true }
crossplane-types-upbound-gcp-notebooks = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-notebooks", optional = true }
crossplane-types-upbound-gcp-orgpolicy = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-orgpolicy", optional = true }
crossplane-types-upbound-gcp-osconfig = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-osconfig", optional = true }
crossplane-types-upbound-gcp-oslogin = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-oslogin", optional = true }
crossplane-types-upbound-gcp-privateca = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-privateca", optional = true }
crossplane-types-upbound-gcp-pubsub = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-pubsub", optional = true }
crossplane-types-upbound-gcp-redis = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-redis", optional = true }
crossplane-types-upbound-gcp-secretmanager = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-secretmanager", optional = true }
crossplane-types-upbound-gcp-servicenetworking = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-servicenetworking", optional = true }
crossplane-types-upbound-gcp-sourcerepo = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-sourcerepo", optional = true }
crossplane-types-upbound-gcp-spanner = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-spanner", optional = true }
crossplane-types-upbound-gcp-sql = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-sql", optional = true }
crossplane-types-upbound-gcp-storage = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-storage", optional = true }
crossplane-types-upbound-gcp-storagetransfer = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-storagetransfer", optional = true }
crossplane-types-upbound-gcp-tags = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-tags", optional = true }
crossplane-types-upbound-gcp-tpu = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-tpu", optional = true }
crossplane-types-upbound-gcp-vertexai = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-vertexai", optional = true }
crossplane-types-upbound-gcp-vpcaccess = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-vpcaccess", optional = true }
crossplane-types-upbound-gcp-workflows = { version = "0.1.0", path = "crates/crossplane-types-upbound-gcp-workflows", optional = true }
